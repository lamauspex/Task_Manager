task-manager/
│
├───src/                    # Основная кодовая база
│   │
│   ├───app/                # Директория основного приложения
│   │   │
│   │   ├─── analytics/      # Новый пакет для анализа и построения отчетов
│   │   │   ├─── base.py             # Базовый класс для аналитики
│   │   │   └─── reports.py          # Логика формирования отчетов
│   │   │
│   │   ├─── core/           # Ядро приложения (конфиг, утилиты)
│   │   │   ├─── config.py           # Настройки конфигурации
│   │   │   ├─── constants.py        # Файл для общих констант
│   │   │   ├─── database.py         # Подключение к БД
│   │   │   └─── utils.py            # Вспомогательные методы
│   │   │
│   │   ├─── exceptions/     # Пользовательские исключения
│   │   │   ├─── base.py             # Базовый класс исключений проекта
│   │   │   ├─── integration.py      # Интеграционные исключения
│   │   │   ├─── database.py         # Исключения взаимодействия с базой данных
│   │   │   ├─── business_logic.py   # Исключения бизнес-логики
│   │   │   ├─── http.py             # HTTP-исключения
│   │   │   └─── validation.py       # Исключение проверки данных
│   │   │
│   │   ├─── integrations/   # Новый пакет для внешних интеграций
│   │   │   └─── calendar.py        # Интеграция с Google Calendar
│   │   │
│   │   ├─── interfaces/
│   │   │   ├─── i_repository.py     # Интерфейс репозитория
│   │   │   └─── i_service.py        # Интерфейс сервиса
│   │   │
│   │   ├─── middlewares/    # Промежуточные слои обработки
│   │   │   ├─── auth.py             # Авторизационная middleware
│   │   │   └─── logging.py          # Логи
│   │   │
│   │   ├─── models/         # Модели данных
│   │   │   ├─── base.py             # Базовые модели
│   │   │   ├─── tasks_models.py     # Модели задач
│   │   │   └─── users_models.py     # Модели пользователей
│   │   │
│   │   ├─── repositories/   # Репозитории (работа с хранилищем)
│   │   │   ├─── tasks_repo.py       # Репозиторий Tasks
│   │   │   └─── users_repo.py       # Репозиторий Users
│   │   │
│   │   ├─── routers/        # Маршрутизаторы API
│   │   │   │
│   │   │   ├─── integrations_routes/    # роуты для интеграций
│   │   │   │   └─── calendar.py            # роуты для интеграции с календарем
│   │   │   │
│   │   │   ├─── tasks_routes/           # роуты для задач
│   │   │   │   └─── tasks_routes.py         # роуты задач
│   │   │   │
│   │   │   └─── users_routes/           # роуты для пользователей
│   │   │       └─── users_routes.py         # роуты пользователей
│   │   │
│   │   ├─── schemas/        # Валидные структуры данных (Pydantic)
│   │   │   ├─── base.py             # Базовые схемы
│   │   │   ├─── task_schemas.py     # Схемы задач
│   │   │   └─── user_schemas.py     # Схемы пользователей
│   │   │
│   │   └─── services/       # Бизнес-логика
│   │       │
│   │       ├─── tasks_services/     # сервисы для задач
│   │       │   ├─── tasks_service.py        # конкретные сервисы задач
│   │       │   └─── notifications           # назначение: отправка писем
│   │       │
│   │       └─── users_services/     # сервисы для пользователей
│   │           ├─── user_service.py         # конкретные сервисы пользователей
│   │           └─── auth_service.py         # назначение: создает хешированный объект пользователя
│   │
│   └─── main.py             # точка входа в приложение
│
│
│
│
├─── tests/       # Тесты
│   │
│   ├─── fixtures/      # фикстуры и объекты
│   │   ├─── users.py        # фикстуры пользователей
│   │   └─── factories.py    # фикстуры задач
│   │
│   ├─── http_tests/    #
│   │   ├─── auth.http        #
│   │   └─── check-user.http  #
│   │
│   ├─── unit/      # Юнит-тесты
│   │   │
│   │   ├─── test_tasks_unit/       # Тесты задач
│   │   │   ├─── test_tasks_models.py    # тесты моделей
│   │   │   ├─── test_tasks_services.py  # тесты сервисов
│   │   │   └─── test_tasks_schemas.py   # тесты схем
│   │   │
│   │   └─── test_users_unit/       # Тесты пользователей
│   │       ├─── test_users_models.py    # тесты моделей
│   │       ├─── test_users_services.py  # тесты сервисов
│   │       └─── test_users_schemas.py   # тесты схем
│   │
│   ├─── integration/       # Интеграционные тесты
│   │   │
│   │   ├─── test_tasks_integration/        # Тесты задач
│   │   │   ├─── test_tasks_crud_operations.py   # тесты CRUD операций
│   │   │   ├─── test_tasks_database.py          # тесты базы данных
│   │   │   └─── test_tasks_api_endpoints.py     # тесты API эндпоинтов
│   │   │
│   │   └─── test_users_integration/         # Тесты пользователей
│   │       ├─── test_users_crud_operations.py       # тесты CRUD операций
│   │       ├─── test_users_database.py              # тесты базы данных
│   │       └─── test_users_api_endpoints.py         # тесты API эндпоинтов
│   │
│   ├─── __init__.py         # пакетный инициализатор
│   ├─── conftests.py        # конфигурация тестов
│   ├─── pytest.ini          # конфигурация тестов
│   └─── .env.test           # окружение для тестов
│
│
│
│
├─── docs/         # Документация
│   │
│   ├─── api_docs/    # Документы API
│   │   ├─── openapi.json   # спецификация OpenAPI
│   │   └─── swagger.yaml   # YAML спецификация Swagger
│   │
│   ├─── usage.md           # руководство по использованию
│   └─── architecture.md    # архитектурная схема
│
├─── scripts/         # Скрипты автоматизации
│   │
│   ├─── migrate.sh         # скрипт миграции базы данных
│   ├─── lint.sh            # linter для анализа качества кода
│   └─── start.sh           # запуск сервера
│
├─── infra/           # Инфраструктурные артефакты
│   │
│   ├─── docker/            # Файлы Docker и Docker Compose
│   │   ├─── Dockerfile              # образ Docker
│   │   └─── docker-compose.yml      # сборка контейнера
│   │
│   └─── kubernetes/        # Kubernetes манифесты
│       ├─── deployment.yaml         # развертывание приложений
│       └─── service.yaml            # описание сетевых ресурсов
│
│
├─── logs/            # Главный журнал ошибок
│
│
├─── .env                   # файл переменных окружения
├─── requirements.txt       # список зависимостей Python
├─── database.db            # база данных SQLite
├─── README                 # главная страница README
└─── .gitignore             # файлы, игнорируемые Git'ом